<!--
    ※Create a custom error handler
    You can create your own error handling functions to handle runtime errors generated by the PHP engine.
    A custom error handler gives you more flexibility and control over errors, it can check for errors and decide how to handle them,
    it may display a message to the user, log the error in a file or database, or Email it, try to fix the problem and continue,
    quit script execution, or ignore errors entirely.
    A custom error handler must be able to handle at least two arguments (errno and errstr),
    but it can optionally accept three additional arguments (errfile, errline, and errcontext), as described below:
-->

<!--
    ※Required - The following parameters are required
    errno:
        Specifies the error level as an integer. This corresponds to the appropriate error level constant (E_ERROR, E_WARNING, etc.)
    errstr:
        Specify the error message as a string

    ※Optional - the following parameters are optional
    errfile:
        Specifies the filename of the script file where the error occurred, as a string
    errline:
        Specifies the line number where the error occurred, as a string
    errcontext:
        Specifies an array containing all variables and their values ​​that existed at the time of the error. useful for debugging
-->
<?php

//Error handling function
function customError($errno, $errstr)
{
    echo "<b>Error:</b> [$errno] $errstr";
}
//Set the error handler
set_error_handler("customError");
//Trigger error
echo 10 / 0;